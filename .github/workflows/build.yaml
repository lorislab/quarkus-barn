name: build
on:
  push:
    branches:
      - '**'
env:
  GRAALVM_VER: 20.1.0
  GRAALVM_JAVA: java11
  GRAALVM_HOME: .graalvm
  JAVA_HOME: .graalvm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: GraalVM
        run: |
          curl https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VER/graalvm-ce-$GRAALVM_JAVA-linux-amd64-$GRAALVM_VER.tar.gz -O -J -L && tar xfz graalvm-ce-$GRAALVM_JAVA-linux-amd64-$GRAALVM_VER.tar.gz
          mv graalvm-ce-$GRAALVM_JAVA-$GRAALVM_VER $GRAALVM_HOME
          $GRAALVM_HOME/bin/gu install native-image
          rm *.tar.gz
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build project
        run: mvn clean install
      - name: Native tests
        run: |
          cd tests
          mvn clean package -DskipTests -Dnative
          cd pg-test
          docker build -t $(echo "$PWD" | sed 's!.*/!!') -f src/main/docker/Dockerfile .
          mvn failsafe:integration-test failsafe:verify
          cd ../mysql-test
          docker build -t $(echo "$PWD" | sed 's!.*/!!') -f src/main/docker/Dockerfile .
          mvn failsafe:integration-test failsafe:verify